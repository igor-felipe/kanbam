generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  password String
  email    String @unique
  name     String

  workspace workspace[]
  Member    Member[]

  @@map("user")
}

model workspace {
  id   String @id @default(cuid())
  name String

  User   User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  Member Member[]
  Board  Board[]

  @@unique([name, userId])
  @@map("workspace")
}

model Member {
  role        String
  userId      String
  workspaceId String

  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workspace workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([workspaceId, userId])
  @@map("post")
}

model Board {
  id          String @id @default(cuid())
  name        String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Column      Column[]
  workspace   workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workspaceId String

  @@unique([name, workspaceId])
  @@map("board")
}

model Column {
  id          String @id @default(cuid())
  name        String
  description String
  board       Board  @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  boardId     String
  wip         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Card Card[]

  @@unique([name, boardId])
  @@map("column")
}

model Card {
  id          String @id @default(cuid())
  name        String
  description String
  columnId    String

  column    Column   @relation(fields: [columnId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, columnId])
  @@map("card")
}
